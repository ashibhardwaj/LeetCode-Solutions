class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        int n = image.size();
        int m = image[0].size();
        vector <vector <int> > v(n, vector <int>(m, 0));
        queue <pair <int,int> > q;
        int c = image[sr][sc];
        q.push(make_pair(sr, sc));
        while(!q.empty())
        {
            pair<int, int> p = q.front();
            q.pop();
            v[p.first][p.second] = 1;
            image[p.first][p.second] = newColor;
            if(p.first - 1 >= 0 && image[p.first-1][p.second] == c && !v[p.first - 1][p.second])
                q.push(make_pair(p.first-1, p.second));
            if(p.first + 1 < n && image[p.first + 1][p.second] == c && !v[p.first + 1][p.second])
                q.push(make_pair(p.first + 1, p.second));
            if(p.second - 1 >= 0 && image[p.first][p.second - 1] == c && !v[p.first][p.second - 1])
                q.push(make_pair(p.first, p.second - 1));
            if(p.second + 1 < m && image[p.first][p.second + 1] == c && !v[p.first][p.second + 1])
                q.push(make_pair(p.first, p.second + 1));
        }
        return image;
    }
};
