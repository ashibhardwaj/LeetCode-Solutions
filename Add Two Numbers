/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int carry=0, data=0;
        ListNode * res=new ListNode(0);
        ListNode * cur=res;
        while(l1 || l2)
        {
            if(l1!=NULL && l2!=NULL)
        {
            data=l1->val+l2->val+carry;
            carry=(data/10)%10;
            data=data%10;
            ListNode* temp=new ListNode(data);
            cur->next=temp;
            cur=cur->next;
            l1=l1->next;
            l2=l2->next;
        }
        else if(l1!=NULL)
        {
            data=l1->val+carry;
            carry=(data/10)%10;
            data=data%10;
            ListNode* temp=new ListNode(data);
            cur->next=temp;
            cur=cur->next;
            l1=l1->next;
        }
        else if(l2!=NULL)
        {
            data=l2->val+carry;
            carry=(data/10)%10;
            data=data%10;
            ListNode* temp=new ListNode(data);
            cur->next=temp;
            cur=cur->next;
            l2=l2->next;
        }
        }
        if(carry!=0)
        {
            ListNode* temp=new ListNode(carry);
            cur->next=temp;
            cur=cur->next;
        }
        res=res->next;
        return res;
    }
};
