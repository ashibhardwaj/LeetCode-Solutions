class MinStack {
    stack < pair <int, int>> s;
    int minElement;

public:
    /** initialize your data structure here. */
    MinStack() {
        
    }
    
    void push(int x) {
        if(s.empty())
        {
            s.push(make_pair(x,x));
            minElement=x;
            return;
        }
        if(x>=minElement)
            s.push(make_pair(x,minElement));
        else
        {
            s.push(make_pair(x,x));
            minElement=x;
        }
    }
    
    void pop() {
        if(s.empty())
            return;
        s.pop();
        if(!s.empty())
            minElement= s.top().second;
        else
            minElement= INT_MAX;
    }
    
    int top() {
        if(s.empty())
            return 0;
        return s.top().first;
        
    }
    
    int getMin() {
        return minElement;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(x);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
