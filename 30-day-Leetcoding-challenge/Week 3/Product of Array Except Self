class Solution {
public:
    
    vector<int> productExceptSelfWithExtraSpace(vector<int>& nums) {
        int n = nums.size();
        vector <int> ans(n);
        vector <int> prefix(n);
        vector <int> suffix(n);
        prefix[0]=nums[0];
        suffix[n-1]=nums[n-1];
        for(int i = 1; i < n; i++)
        {
            prefix[i]=prefix[i-1]*nums[i];
        }
        for(int i = n-2; i >= 0; i--)
        {
            suffix[i]=suffix[i+1]*nums[i];
        }
        ans[0]=suffix[1];
        ans[n-1]=prefix[n-2];
        for(int i = 1; i < n-1; i++)
        {
            ans[i]=prefix[i-1]*suffix[i+1];
        }
        return ans;
    }
    
    
    vector<int> productExceptSelf(vector<int>& nums) {
        int n = nums.size();
        vector <int> ans(n);
        int R=1;
        ans[0]=nums[0];
        for(int i = 1; i < n; i++)
        {
            ans[i]=ans[i-1]*nums[i];
        }
        for(int i = n-1; i > 0; i--)
        {
            ans[i]=ans[i-1]*R;
            R*=nums[i];
        }
        ans[0]=R;
        return ans;
    }
};
